189
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#509#200: GETFIELD_F T250, R11, .x
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#304#95: MOVE_I R99, R98
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#63#29: MOVE_I T39, IConst: 0
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#117#65: MOVE_I R83, R82
JMEIntTest#main(java.lang.String[])#void#46#45: MOVE_I R22, T21
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#481#193: MOVE_I R244, T243
com.jme.math.Vector3f#<clinit>()#void#71#36: MOVE_F T30, FConst: 1.0
com.jme.math.Vector3f#hashCode()#int#33#16: MOVE_I R21, R20
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#188#114: MOVE_I T111, IConst: 0
com.jme.math.Vector2f#equals(java.lang.Object)#boolean#38#10: GETFIELD_F T12, R0, .y
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#64#18: MOVE_I T36, IConst: 0
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#24#8: GETFIELD_F T28, R0, .y
com.jme.math.Vector2f#hashCode()#int#18#8: MOVE_I R13, R12
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#607#270: MOVE_F R291, R288
com.jme.math.Vector3f#<clinit>()#void#45#23: MOVE_F T21, FConst: 1.0
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#154#81: MOVE_I T98, IConst: 0
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#120#43: MOVE_I R58, T57
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#348#130: MOVE_F R185, T184
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#586#233: MOVE_I T281, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#609#271: MOVE_F R292, R291
com.jme.math.Vector3f#<clinit>()#void#58#29: MOVE_F T25, FConst: 1.0
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#69#30: MOVE_I R41, R40
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#92#32: MOVE_I R48, T47
com.jme.math.Vector3f#hashCode()#int#39#19: GETFIELD_F T24, R0, .z
com.jme.math.Vector3f#hashCode()#int#15#5: ADD_I T10, T7, T9
com.jme.math.Vector2f#<init>()#void#8#5: PUTFIELD_F T2, .y, T1
com.jme.math.Vector3f#hashCode()#int#21#9: MOVE_I R14, R13
com.jme.math.Vector3f#<clinit>()#void#58#31: MOVE_F T27, FConst: 0.0
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#19#10: MOVE_I R25, T24
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#239#96: MOVE_I T151, IConst: 1
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#35#18: MOVE_I R31, R25
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#156#85: MOVE_I R101, R100
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#94#33: MOVE_I R49, R48
com.jme.math.Vector2f#hashCode()#int#9#3: GETFIELD_F T8, R0, .x
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#120#40: MOVE_I T56, IConst: 0
com.jme.math.Vector2f#<init>()#void#11#6: PUTFIELD_F R0, .x, T3
com.jme.math.Vector3f#hashCode()#int#36#17: MOVE_I R22, R21
com.jme.math.Vector2f#hashCode()#int#22#10: MUL_I T15, IConst: 37, R14
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#421#164: MUL_F T219, R217, R218
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#66#22: MOVE_I R39, R38
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#116#41: MOVE_I T55, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#1009#376: MOVE_I T415, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#126#42: MOVE_F R102, R101
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#481#190: MOVE_I T242, IConst: 0
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#364#137: MOVE_F R192, R191
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#124#41: MOVE_F R101, T100
com.jme.math.Vector3f#<clinit>()#void#32#15: MOVE_F T15, FConst: 0.0
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#36#11: GETFIELD_F T30, R0, .z
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#243#95: MOVE_I T152, IConst: 0
com.jme.math.Vector2f#toString()#java.lang.String#25#10: GETFIELD_F T12, R0, .y
com.jme.math.Vector2f#hashCode()#int#15#5: ADD_I T10, T7, T9
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#1013#375: MOVE_I T414, IConst: 0
com.jme.math.Vector3f#<clinit>()#void#45#24: MOVE_F T22, FConst: 0.0
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#220#98: MOVE_I T123, IConst: 1
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#226#101: MOVE_I R127, R126
com.jme.math.Vector2f#hashCode()#int#31#14: ADD_I T19, R14, T18
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#64#21: MOVE_I R38, T37
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#58#15: GETFIELD_F T16, R4, .z
com.jme.intersection.Intersection#sort(float[])#void#11#6: MOVE_I T10, IConst: 1
chord.analyses.expax.lang.Accept#accept(boolean)#boolean#0#1: MOVE_I R0, R0
com.jme.math.Vector3f#<clinit>()#void#19#9: MOVE_F T11, FConst: 0.0
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#92#29: MOVE_I T46, IConst: 0
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#590#235: MOVE_I R284, T283
com.jme.math.Vector3f#hashCode()#int#2#1: MOVE_I R6, IConst: 37
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#86#43: MOVE_I R54, R53
com.jme.intersection.Intersection#<clinit>()#void#3#1: PUTSTATIC_D DConst: 1.0E-12, .EPSILON
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#477#191: MOVE_I T241, IConst: 1
com.jme.math.Vector2f#hashCode()#int#33#16: MOVE_I R21, R20
chord.analyses.expax.lang.math.ApproxMath#abs(float)#float#0#1: MOVE_F R2, R0
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#184#115: MOVE_I T110, IConst: 1
com.jme.math.Vector3f#hashCode()#int#16#6: ADD_I T11, IConst: 37, T10
com.jme.math.Vector2f#hashCode()#int#16#6: ADD_I T11, IConst: 37, T10
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#337#104: MOVE_I R107, R106
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#67#29: MOVE_I R40, T39
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#553#217: MOVE_I R266, T265
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#140#48: MOVE_F R108, R107
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#38#19: MOVE_I R31, R30
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#555#218: MOVE_I R267, R266
com.jme.math.Vector3f#hashCode()#int#22#10: MUL_I T15, IConst: 37, R14
com.jme.math.Vector3f#hashCode()#int#45#21: ADD_I T26, T23, T25
com.jme.intersection.Intersection#pointInTri(float[],float[],float[],float[],int,int)#boolean#210#124: MOVE_I R139, T138
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#100#41: MOVE_I R51, R50
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#1013#378: MOVE_I R417, T416
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#115#64: MOVE_I R82, T80
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#335#103: MOVE_I R106, T105
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#138#47: MOVE_F R107, T106
com.jme.math.Vector3f#<clinit>()#void#58#30: MOVE_F T26, FConst: 0.0
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#224#100: MOVE_I R126, T125
com.jme.math.Vector2f#equals(java.lang.Object)#boolean#26#7: GETFIELD_F T10, R4, .x
com.jme.math.Vector3f#<clinit>()#void#45#22: MOVE_F T20, FConst: 0.0
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#59#30: MOVE_I T41, IConst: 1
com.jme.math.Vector3f#hashCode()#int#18#8: MOVE_I R13, R12
com.jme.math.Vector2f#equals(java.lang.Object)#boolean#42#11: GETFIELD_F T13, R4, .y
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#65#33: MOVE_I R45, R44
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#12#7: MOVE_I R22, T21
com.jme.intersection.Intersection#sort(float[])#void#15#5: MOVE_I T11, IConst: 0
com.jme.math.Vector3f#<clinit>()#void#19#8: MOVE_F T10, FConst: 0.0
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#414#160: MUL_F T215, R213, R214
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#362#136: MOVE_F R191, T190
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#483#194: MOVE_I R245, R244
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#334#124: MOVE_F R179, T178
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#415#161: MOVE_F R216, T215
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#336#125: MOVE_F R180, R179
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#150#82: MOVE_I T97, IConst: 1
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#84#42: MOVE_I R53, T52
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#110#35: MOVE_F R95, T94
com.jme.intersection.Intersection#sort(float[])#void#16#9: MOVE_I R14, R13
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#54#14: GETFIELD_F T15, R0, .z
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#105#52: MOVE_I R62, T61
com.jme.math.Vector3f#hashCode()#int#48#24: MOVE_I R29, R28
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#111#62: MOVE_I T79, IConst: 1
com.jme.math.Vector3f#hashCode()#int#37#18: MUL_I T23, IConst: 37, R22
com.jme.math.Vector3f#hashCode()#int#9#3: GETFIELD_F T8, R0, .x
com.jme.math.Vector3f#toString()#java.lang.String#25#10: GETFIELD_F T12, R0, .y
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#8#5: MOVE_I T19, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#350#131: MOVE_F R186, R185
com.jme.intersection.Intersection#sort(float[])#void#15#8: MOVE_I R13, T12
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#112#36: MOVE_F R96, R95
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#122#44: MOVE_I R59, R58
com.jme.math.Vector3f#hashCode()#int#47#23: MOVE_I R28, T27
com.jme.math.Vector3f#<clinit>()#void#71#37: MOVE_F T31, FConst: 1.0
com.jme.intersection.Intersection#pointInTri(float[],float[],float[],float[],int,int)#boolean#206#122: MOVE_I T136, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#245#99: MOVE_I R155, R154
com.jme.math.Vector3f#hashCode()#int#46#22: ADD_I T27, R22, T26
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#105#49: MOVE_I T60, IConst: 0
com.jme.math.Vector3f#hashCode()#int#30#13: ADD_I T18, T15, T17
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#188#117: MOVE_I R113, T112
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#63#32: MOVE_I R44, T42
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#154#84: MOVE_I R100, T99
com.jme.math.Vector3f#toString()#java.lang.String#37#14: GETFIELD_F T16, R0, .z
com.jme.math.Vector2f#<init>()#void#7#4: MOVE_F T3, T1
com.jme.math.Vector2f#hashCode()#int#30#13: ADD_I T18, T15, T17
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#302#94: MOVE_I R98, T97
com.jme.math.Vector2f#hashCode()#int#21#9: MOVE_I R14, R13
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#26#7: GETFIELD_F T10, R4, .x
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#101#50: MOVE_I T59, IConst: 1
com.jme.math.Vector3f#<clinit>()#void#32#16: MOVE_F T16, FConst: 0.0
com.jme.math.Vector2f#hashCode()#int#2#1: MOVE_I R6, IConst: 37
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#115#61: MOVE_I T77, IConst: 0
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#597#238: MOVE_I R287, T286
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#224#97: MOVE_I T124, IConst: 0
com.jme.math.Vector3f#<clinit>()#void#19#10: MOVE_F T12, FConst: 0.0
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#532#207: GETFIELD_F T257, R11, .z
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#88#30: MOVE_I T45, IConst: 1
com.jme.math.Vector3f#toString()#java.lang.String#13#6: GETFIELD_F T8, R0, .x
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#190#118: MOVE_I R114, R113
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#42#11: GETFIELD_F T13, R4, .y
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#12#4: MOVE_I T20, IConst: 0
com.jme.math.Vector3f#hashCode()#int#31#14: ADD_I T19, R14, T18
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#38#10: GETFIELD_F T12, R0, .y
com.jme.math.Vector3f#hashCode()#int#7#2: MUL_I T7, IConst: 37, IConst: 37
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#522#204: GETFIELD_F T254, R11, .y
com.jme.math.Vector2f#hashCode()#int#17#7: MOVE_I R12, T11
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#269#85: MOVE_I R90, T89
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#107#53: MOVE_I R63, R62
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#553#214: MOVE_I T264, IConst: 0
com.jme.math.Vector3f#<clinit>()#void#71#38: MOVE_F T32, FConst: 1.0
com.jme.math.Vector3f#hashCode()#int#24#11: GETFIELD_F T16, R0, .y
chord.analyses.expax.lang.Accept#accept(float)#float#0#1: MOVE_F R0, R0
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#14#8: MOVE_I R23, R22
com.jme.math.Vector3f#hashCode()#int#32#15: MOVE_I R20, T19
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#98#40: MOVE_I R50, T49
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#560#220: MOVE_I R269, T268
com.jme.math.Vector3f#hashCode()#int#17#7: MOVE_I R12, T11
com.jme.math.Vector2f#toString()#java.lang.String#13#6: GETFIELD_F T8, R0, .x
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#422#165: MOVE_F R220, T219
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#549#215: MOVE_I T263, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#431#169: MOVE_F R224, R220
com.jme.math.Vector2f#hashCode()#int#7#2: MUL_I T7, IConst: 37, IConst: 37
com.jme.math.Vector2f#hashCode()#int#24#11: GETFIELD_F T16, R0, .y
JMEIntTest#main(java.lang.String[])#void#47#46: MOVE_I R23, R22
com.jme.intersection.Intersection#pointInTri(float[],float[],float[],float[],int,int)#boolean#212#125: MOVE_I R140, R139
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#60#19: MOVE_I T35, IConst: 1
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#84#39: MOVE_I T51, IConst: 0
com.jme.math.Vector2f#equals(java.lang.Object)#boolean#22#6: GETFIELD_F T9, R0, .x
com.jme.math.Vector2f#hashCode()#int#32#15: MOVE_I R20, T19
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#590#232: MOVE_I T282, IConst: 0
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#36#18: MOVE_I R30, T29
com.jme.math.Vector2f#<init>()#void#7#2: MOVE_F T1, FConst: 0.0
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#12#5: GETFIELD_F T26, R0, .x
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#424#166: MOVE_F R221, R216
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#592#236: MOVE_I R285, R284
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#1015#379: MOVE_I R418, R417
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#271#86: MOVE_I R91, R90
com.jme.math.Vector3f#<clinit>()#void#32#17: MOVE_F T17, FConst: 1.0
com.jme.intersection.Intersection#pointInTri(float[],float[],float[],float[],int,int)#boolean#210#121: MOVE_I T137, IConst: 0
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#80#40: MOVE_I T50, IConst: 1
com.jme.intersection.Intersection#intersection(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#243#98: MOVE_I R154, T153
com.jme.math.Vector3f#equals(java.lang.Object)#boolean#22#6: GETFIELD_F T9, R0, .x
59
com.jme.intersection.Intersection#<clinit>()#void#57#22: NEWARRAY T12, IConst: 2, float[]#ARRAY#float[]#ARRAY
com.jme.intersection.Intersection#<clinit>()#void#63#24: NEWARRAY T13, IConst: 2, float[]#ARRAY#float[]#ARRAY
com.jme.intersection.Intersection#<clinit>()#void#68#26: NEW T14, com.jme.math.Vector2f#serialVersionUID#J#com.jme.math.Vector2f
com.jme.intersection.Intersection#<clinit>()#void#78#30: NEW T16, com.jme.math.Vector2f#x#F#com.jme.math.Vector2f
com.jme.intersection.Intersection#<clinit>()#void#68#26: NEW T14, com.jme.math.Vector2f#y#F#com.jme.math.Vector2f
com.jme.intersection.Intersection#<clinit>()#void#6#2: NEW T2, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#78#30: NEW T16, com.jme.math.Vector2f#serialVersionUID#J#com.jme.math.Vector2f
com.jme.intersection.Intersection#<clinit>()#void#68#26: NEW T14, com.jme.math.Vector2f#x#F#com.jme.math.Vector2f
JMEIntTest#randvec()#com.jme.math.Vector3f#0#1: NEW T0, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#16#6: NEW T4, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#6#2: NEW T2, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#26#10: NEW T6, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#toArray(float[])#float[]#5#2: NEWARRAY T2, IConst: 3, float[]#ARRAY#float[]#ARRAY
com.jme.intersection.Intersection#<clinit>()#void#6#2: NEW T2, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#16#6: NEW T4, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#78#30: NEW T16, com.jme.math.Vector2f#y#F#com.jme.math.Vector2f
com.jme.intersection.Intersection#<clinit>()#void#46#18: NEW T10, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#36#14: NEW T8, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#26#10: NEW T6, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#16#6: NEW T4, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#36#14: NEW T8, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#26#10: NEW T6, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#6#2: NEW T2, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#16#6: NEW T4, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#36#14: NEW T8, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#46#18: NEW T10, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#26#10: NEW T6, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#36#14: NEW T8, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#46#18: NEW T10, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.intersection.Intersection#coplanarTriTri(com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f,com.jme.math.Vector3f)#boolean#0#1: NEW T25, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.intersection.Intersection#<clinit>()#void#46#18: NEW T10, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#12#5: NEW T8, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#12#5: NEW T8, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#25#12: NEW T13, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#25#12: NEW T13, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#38#19: NEW T18, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#51#26: NEW T23, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#64#33: NEW T28, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#38#19: NEW T18, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#51#26: NEW T23, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#64#33: NEW T28, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#cross(float,float,float,com.jme.math.Vector3f)#com.jme.math.Vector3f#5#2: NEW T12, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#25#12: NEW T13, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#12#5: NEW T8, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#38#19: NEW T18, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#51#26: NEW T23, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#25#12: NEW T13, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#12#5: NEW T8, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#38#19: NEW T18, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#subtract(com.jme.math.Vector3f,com.jme.math.Vector3f)#com.jme.math.Vector3f#4#2: NEW T3, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#subtract(com.jme.math.Vector3f,com.jme.math.Vector3f)#com.jme.math.Vector3f#4#2: NEW T3, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#cross(float,float,float,com.jme.math.Vector3f)#com.jme.math.Vector3f#5#2: NEW T12, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#subtract(com.jme.math.Vector3f,com.jme.math.Vector3f)#com.jme.math.Vector3f#4#2: NEW T3, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#cross(float,float,float,com.jme.math.Vector3f)#com.jme.math.Vector3f#5#2: NEW T12, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#64#33: NEW T28, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
com.jme.math.Vector3f#subtract(com.jme.math.Vector3f,com.jme.math.Vector3f)#com.jme.math.Vector3f#4#2: NEW T3, com.jme.math.Vector3f#serialVersionUID#J#com.jme.math.Vector3f
com.jme.math.Vector3f#cross(float,float,float,com.jme.math.Vector3f)#com.jme.math.Vector3f#5#2: NEW T12, com.jme.math.Vector3f#x#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#64#33: NEW T28, com.jme.math.Vector3f#y#F#com.jme.math.Vector3f
com.jme.math.Vector3f#<clinit>()#void#51#26: NEW T23, com.jme.math.Vector3f#z#F#com.jme.math.Vector3f
8
chord.analyses.expax.lang.math.ApproxMath#abs(float)#float#1
com.jme.math.Vector3f#set(float,float,float)#com.jme.math.Vector3f#111
com.jme.intersection.Intersection#edgeEdgeTest(float[],float[],float[],int,int,float,float)#boolean#0001111
com.jme.intersection.Intersection#edgeAgainstTriEdges(float[],float[],float[],float[],float[],int,int)#boolean#0000011
com.jme.math.Vector3f#cross(float,float,float,com.jme.math.Vector3f)#com.jme.math.Vector3f#1110
com.jme.intersection.Intersection#pointInTri(float[],float[],float[],float[],int,int)#boolean#000011
com.jme.intersection.Intersection#newComputeIntervals(float,float,float,float,float,float,float,float,com.jme.math.Vector3f,com.jme.math.Vector2f)#boolean#1111111100
com.jme.math.Vector3f#<init>(float,float,float)#void#111
